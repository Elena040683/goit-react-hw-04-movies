{"version":3,"sources":["service/movies-api.js","images/error.jpg","components/MoviesList/MoviesList.js","components/MoviesList/MoviesList.module.css","components/SearchBar/SearchBar.module.css","components/ErrorView/ErrorView.module.css","components/SearchBar/SearchBar.js","components/Loader/Loader.js","components/ErrorView/ErrorView.js","views/MoviesPage/MoviesPage.js"],"names":["BASE_URL","KEY","fetchData","a","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","page","searchMoviesByQuery","query","getInfoAboutMovie","movieId","getInfoAboutCast","getUsersReviews","MoviesList","movies","moviesListNotEmpty","length","location","useLocation","className","styles","movieGallery","map","movie","movieGalleryItem","to","pathname","id","state","from","movieGalleryItemImage","src","poster_path","notFoundImg","alt","title","movieTitle","module","exports","Searchbar","onSubmit","changeQuery","history","useHistory","searchForm","e","preventDefault","trim","toast","error","push","search","searchFormInput","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","LoaderComponent","color","height","width","Component","ErrorView","message","role","wrapper","errorImg","text","Status","MoviesPage","useState","setMovies","searchQuery","setSearchQuery","setError","status","setStatus","useEffect","URLSearchParams","get","moviesAPI","then","results","catch","newQuery"],"mappings":"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","file":"static/js/movies-page.f54b2433.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '286571d6f6f7efdc7929d8780c16da79';\n\nasync function fetchData(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendingMovies(page = 1) {\n  return fetchData(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=${page}`\n  );\n}\n\nexport function searchMoviesByQuery(query) {\n  return fetchData(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function getInfoAboutMovie(movieId) {\n  return fetchData(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function getInfoAboutCast(movieId) {\n  return fetchData(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n}\n\nexport function getUsersReviews(movieId) {\n  return fetchData(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n}\n","export default __webpack_public_path__ + \"static/media/error.78599aa1.jpg\";","import styles from './MoviesList.module.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport notFoundImg from '../../images/error.jpg';\n\nexport default function MoviesList({ movies }) {\n  const moviesListNotEmpty = movies.length !== 0;\n  const location = useLocation();\n\n  return (\n    <ul className={styles.movieGallery}>\n      {moviesListNotEmpty &&\n        movies.map(movie => (\n          <li key={movie.id} className={styles.movieGalleryItem}>\n            <Link\n              to={{\n                pathname: `movies/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              <img\n                className={styles.movieGalleryItemImage}\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                    : notFoundImg\n                }\n                alt={movie.title}\n              />\n              <p className={styles.movieTitle}>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieGallery\":\"MoviesList_movieGallery__1RkJ4\",\"movieGalleryItem\":\"MoviesList_movieGalleryItem__2NNvg\",\"movieGalleryItemImage\":\"MoviesList_movieGalleryItemImage__AA-az\",\"title\":\"MoviesList_title__3tb8k\",\"movieTitle\":\"MoviesList_movieTitle__3U8TI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchBar_searchForm__296fG\",\"searchFormInput\":\"SearchBar_searchFormInput__1Gmkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorView_wrapper__2CZKs\",\"text\":\"ErrorView_text__1PbaT\",\"errorImg\":\"ErrorView_errorImg__nrkbz\"};","import { useHistory, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './SearchBar.module.css';\n\nexport default function Searchbar({ onSubmit, query, changeQuery }) {\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleNameChange = e => {\n    changeQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.error('Please enter some value');\n    }\n    history.push({ ...location, search: `query=${query}` });\n    onSubmit(query);\n  };\n\n  return (\n    <form className={styles.searchForm} onSubmit={handleSubmit}>\n      <input\n        className={styles.searchFormInput}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies ...\"\n        value={query}\n        onChange={handleNameChange}\n      />\n    </form>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class LoaderComponent extends Component {\n  render() {\n    return <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />;\n  }\n}\n","import errorImg from '../../images/error.jpg';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './ErrorView.module.css';\n\nexport default function ErrorView({ message }) {\n  return (\n    <div role=\"alert\" className={styles.wrapper}>\n      <img src={errorImg} width=\"500\" alt=\"Error\" className={styles.errorImg} />\n      <p className={styles.text}>{message}</p>\n    </div>\n  );\n}\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Searchbar from '../../components/SearchBar/SearchBar';\nimport * as moviesAPI from '../../service/movies-api';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorView from '../../components/ErrorView/ErrorView';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = new URLSearchParams(location.search).get('query');\n    if (query) {\n      moviesAPI\n        .searchMoviesByQuery(query)\n        .then(({ results }) => {\n          if (results.length === 0) {\n            setError(`No results were found for ${query}!`);\n            setStatus(Status.REJECTED);\n            return;\n          }\n          setSearchQuery(query);\n          setMovies(results);\n          setStatus(Status.RESOLVED);\n        })\n        .catch(error => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        });\n    }\n  }, [location.search]);\n\n  const onChangeQuery = newQuery => {\n    if (searchQuery === newQuery) {\n      return;\n    }\n\n    if (!searchQuery) return;\n\n    setStatus(Status.PENDING);\n\n    moviesAPI\n      .searchMoviesByQuery(searchQuery)\n      .then(({ results }) => {\n        if (results.length === 0) {\n          setError(`No results were found for ${searchQuery}!`);\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setMovies(results);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n    setSearchQuery(newQuery);\n    setError(null);\n    setStatus(Status.IDLE);\n  };\n\n  const moviesListNotEmpty = movies.length !== 0;\n\n  return (\n    <>\n      <Searchbar\n        onSubmit={onChangeQuery}\n        query={searchQuery}\n        changeQuery={setSearchQuery}\n      />\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <ErrorView message={error} />}\n      {status === Status.RESOLVED && moviesListNotEmpty && (\n        <MoviesList movies={movies} />\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}